
#run main();

main :: () {
    println("Type info test!");

    print_ti(#type_info(void));

    println();

    print_ti(#type_info(s64));
    print_ti(#type_info(u64));
    print_ti(#type_info(s32));
    print_ti(#type_info(u32));
    print_ti(#type_info(s16));
    print_ti(#type_info(u16));
    print_ti(#type_info(s8));
    print_ti(#type_info(u8));

    println();

    print_ti(#type_info(r64));
    print_ti(#type_info(r32));

    println();

    print_ti(#type_info(bool));

    println();
    // pointers();

    return 0;
}

pointers :: () {
    print_ti(#type_info(*void));
}

print_ti :: (ti: *Type_Info) -> void {

    // switch (ti.kind) {
    //
    //     case Type_Info_Kind.Void:
    //         print("void, ", ti.size, " bytes");
    //
    //     case Type_Info_Kind.Integer:
    //         ii := cast(*Type_Info_Int, ti);
    //
    //         print("Integer, ", ti.size, " bytes, ");
    //         if ii.sign print("signed");
    //         else print("unsigned");
    //
    //
    //     case Type_Info_Kind.Real:
    //         print("Real, ", ti.size, " bytes");
    //
    //     case Type_Info_Kind.Bool:
    //         print("bool, ", ti.size, " bytes");
    //
    //     case Type_Info_Kind.Pointer:
    //         pi := cast(*Type_Info_Pointer, ti);
    //
    //         print("Pointer: (");
    //         print_ti(pi.pointer_to);
    //         print("), ", ti.size, " bytes");
    //
    //
    //     default: print("!!! UNHANDLED TYPE !!!");
    // }

    if (ti.kind == Type_Info_Kind.Void) {
        print("void, ", ti.size, " bytes");

    // } else if (ti.kind == Type_Info_Kind.Integer) {
    //
    //     ii := cast(*Type_Info_Int, ti);
    //
    //     print("Integer, ", ti.size, " bytes, ");
    //     if ii.sign print("signed");
    //     else print("unsigned");

    // } else if (ti.kind == Type_Info_Kind.Bool) {
    //     print("bool, ", ti.size, " bytes");

    // } else if (ti.kind == Type_Info_Kind.Real) {
    //     print("Real, ", ti.size, " bytes");

    // } else if (ti.kind == Type_Info_Kind.Pointer) {
    //     pi := cast(*Type_Info_Pointer, ti);
    //
    //     print("Pointer: (");
    //     print_ti(pi.pointer_to);
    //     print("), ", ti.size, " bytes");

    } else {
        print("!!! UNHANDLED TYPE !!!");
    }

    println();
}

