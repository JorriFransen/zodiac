
#run main();
main :: () {
    println("Type info test!");

    print_ti(#type_info(void));

    println();

    print_ti(#type_info(s64));
    print_ti(#type_info(u64));
    print_ti(#type_info(s32));
    print_ti(#type_info(u32));
    print_ti(#type_info(s16));
    print_ti(#type_info(u16));
    print_ti(#type_info(s8));
    print_ti(#type_info(u8));

    println();

    print_ti(#type_info(r64));
    print_ti(#type_info(r32));

    println();

    print_ti(#type_info(bool));

    return 0;
}

print_ti :: (ti: *Type_Info) {

    switch (ti.kind) {

        case Type_Info_Kind.Void:
            println("void, ", ti.size, " bytes");

        case Type_Info_Kind.Integer:
            ii := cast(*Type_Info_Int, ti);
            print("Integer, ", ti.size, " bytes, ");
            if ii.sign println("signed");
            else println("unsigned");

        case Type_Info_Kind.Real:
            println("Real, ", ti.size, " bytes");

        case Type_Info_Kind.Bool:
            println("bool, ", ti.size, " bytes");

        default: println("!!! UNHANDLED TYPE !!!");
    }
}

