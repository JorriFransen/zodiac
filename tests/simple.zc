
#run main();

Vec2 :: struct { x, y: s32; }

main :: () {

    arr : [4]s64 = { 1, 2, 3, 4 };

    slice : []s64 = arr;
    println(slice[1]);
    slice[1] = 22;
    println(slice[1]);

    vecs : []Vec2 = { { 1, 2 }, { 3, 4 }, { 5, 6 }};
    println(vecs);
    println_slice_vec(vecs);
    println_slice_vec(vecs);

    slice2 : []s64;
    slice2 = arr;

    println(arr);
    println(*arr);
    println(slice);
    println_slice_s64(slice);
    println(slice2);
    println_slice_s64(slice2);
    println(slice2.data);

    slice3 : []s64 = { 11, 22, 33, 44, 55 };
    println(slice3);
    println_slice_s64(slice3);

    slice4 : []s64 = { 12, 23, 34, 45, 56, 67, 78, 89, 90 };
    println(slice4);
    println_slice_s64(slice4);
    println(slice4.data);

    println_slice_s64({2, 3, 4});

    return 0;
}

println_slice_s64 :: (s: []s64) {
    print("{ ");
    for (i := 0; i < s.length; i = i + 1) {
        if i > 0 print(", ");
        print(s[i]);
    }
    println(" }");
}

println_slice_vec :: (s: []Vec2) {
    print("{ ");
    for (i := 0; i < s.length; i = i + 1)  {
        if i > 0 print(", ");
        print(s[i]);
    }
    println(" }");
}
